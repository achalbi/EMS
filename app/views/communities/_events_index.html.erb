<% unless community.nil? %>
  <ul class="tabs">
    <%= render 'communities/links' %>
  </ul>
   <ul class="users">
  <% if @invited_events.count > 0 %>
      <span style="font-size:13px;line-height: 2;margin-left:15px;"><strong>Invitation from events </strong></span>
  <% end %>
          <% unless (community.privacy == Privacyenum::PROTECTED && !current_user.is_cu_admin?(community)) %>
              <% if community.is_active?(current_user, community) %>
                <a class="uibutton pull-right icon add " id="create_event" >Create event</a>
              <% end %>
          <% end %>
    <br>
  <% @invited_events.each do |event| %>
      <li style="padding-left:15px;margin-top:5px;cursor:pointer;position:relative;" class="tr-hover event" >
        <% unless event.photo.nil? %>
        <%= link_to cl_image_tag(event.photo.pic_url(:cover_pic_smallest), class:"image_al_c1 thumbnail pull-left ", id:"#{event.photo.id}"), "#" %>

        <% end %>
                  <div style="margin-left:95px;margin-top:5px;">
                    <!--
                    <%= link_to "May be", "/communities/#{community.id}/event_invitation?event_id=#{event.id}&status=maybe", class: "uibutton pull-right button_toggle event_inv", remote: true %>
                    <span class="pull-right "> &nbsp;</span>
                    <%= link_to "No", "/communities/#{community.id}/event_invitation?event_id=#{event.id}&status=no", class: "uibutton pull-right button_toggle event_inv marginRight5", remote: true %>
                    <span class="pull-right "> &nbsp;</span>
                    <%= link_to "Yes", "/communities/#{community.id}/event_invitation?event_id=#{event.id}&status=yes", class: "uibutton pull-right button_toggle event_inv ", remote: true %>
                  -->
                    <address>
                      <strong> <%= link_to event.title, "#", style: "font-size:13px;" %></strong> <br>
                      <strong>Description : &nbsp;</strong> <%= event.description %><br>
                      <strong>Location : &nbsp;</strong><%= event.address %><br>
                      <strong>Privacy : &nbsp;</strong><%= privacy_str(event) %><br>
                        
                    </address>  
                  </div>
      </li>
      <%= link_to "", "/communities/#{community.id}/show_event?event_id=#{event.id}", remote: true %>  
    <% end %>
 </ul>
 <br>

<ul class="tabs span13" id="group_link">
  <li class="active" id="up_events_li"><a href="#">Upcoming events</a></li><%= link_to "", up_events_community_path(@community) , remote: true %>
  <li id="prev_events_li"><a href="#">Past events</a></li><%= link_to "", prev_events_community_path(@community) , remote: true %>
</ul>
      <div class="row" >
        <div class="span13 ui-front" id="comm_groups_list">
              <section id="events_list" class="home_page_post">
                <%= render :partial => 'communities/events', :locals => {:events => events, community: community} %>                  
              </section>
        </div>
      </div>


<%= form_for( @event, url: create_event_communities_path, remote: true, :html => {:multipart => true, id: 'create_event_form'}) do |f| %>
<div id="modal_create_event" style="display:none;" >
          <div id="modal-from-dom" class="modal hide fade in" style="display: block;width:700px;">
            <div class="modal-header">
              <a href="#" id="closeX" class="close">Ã—</a>
              <h3>Create Event</h3>
            </div>
            <div class="modal-body" style="max-height:450px;">
            <div class="row">
              <div class="span15 ui-front">
            
               <%= render 'shared/error_messages', object: f.object %>
               <div class="center_block clearfix">
                  <%= f.label :title %>
                  <div class="input">
                    <%= f.text_field :title, :placeholder=>"Title", 'data-validation' => "length",
     'data-validation-length' =>"3-25", 'data-validation-error-msg' => "The event name has to be a value between 3-25 characters" %></div>
                </div>

                <div class="center_block clearfix">
                  <%= label_tag :starts_at %>
                  <div class="input">
                  <%= f.text_field :starts_at, :placeholder => "Time" %>&nbsp;&nbsp;&nbsp;
                <a id="end_date_add_link" class="uibutton icon add">End Date</a>
                </div>
                </div>
                <div class="center_block clearfix" id="end_date">
                  <%= label_tag :ends_at %>
                  <div class="input">
                    <%= f.text_field :ends_at %>&nbsp;&nbsp;&nbsp;
                   <a id="end_date_remove_link" class="uibutton icon prev">Remove</a>
                  </div>
                </div> 

                <div class="center_block clearfix">
                  <%= f.label :location %>
                  <div class="input ">
                  <%= f.text_field :address, :placeholder => :location, :size => 43, class: 'events_with_autocomplete inherit_width', 'data-autocompleteUrl' => search_address_events_path , 'data-validation' => "length",
     'data-validation-length' =>"3-250", 'data-validation-error-msg' => "The event address has to be a value between 3-250 characters" %>&nbsp;&nbsp;&nbsp;
                
                  <%= link_to "View map", '#', id: "view_map_link",  class: "uibutton icon prev" %>
                </div>
                <div class="input" id="view_map">
                
                </div>
                </div>
                <div class="center_block clearfix">
                  <%= f.label :description %>
                  <div class="input">
                  <%= f.text_area :description, :placeholder=>"Description", class: ' inherit_width', :title=>"Description", rows: 3, cols: 75, 'data-validation' => "length",
     'data-validation-length' =>"3-250", 'data-validation-error-msg' => "The event description has to be a value between 3-250 characters"  %> 
                </div>
                </div>
                <div class="center_block clearfix">
                  <%= label_tag :privacy %>
                  <div class="input">
                    <%= f.select :privacy, options_for_select([["Public", Privacyenum::PUBLIC], ["Private", Privacyenum::PRIVATE]]) %>
                  </div>
                </div> <br>
                <div class="center_block clearfix ">
                    <label>Guests can invite</label>
                  <div class="input">
                    <div class="checkboxFive pull-right marginRight15" >
                  <%= f.check_box 'GuestsCanInvite', id: "Guests_can_invite_other_guests" %>
                    <label for="Guests_can_invite_other_guests" </label>
                  </div>
                  </div>
                </div> <br>
                  <div class="center_block clearfix ">
                    <label >Invite everyone from this community</label>
                  <div class="input">
                    <div class="checkboxFive pull-right marginRight15" style="margin-top:6px;">
                  <%= check_box_tag 'invite_everyone', 1, id: "invite_everyone" %>
                    <label for="invite_everyone" </label>
                  </div>
                  </div>
                </div> <br>
                <div class="center_block clearfix">
                <%= label_tag "Add picture:" %>
                
                <div class="input">    
                <canvas id="imageCanvas" style = "border: 1px solid #ddd; padding:5px; align:center;cursor:pointer" >select new image</canvas>
                </div>
                <%= f.fields_for :photo, Photo.new, :child_index => 'NEW_RECORD' do |photo_form| %>
                  <%= photo_form.file_field :pic, id: "pic",style: "width:0px; height:0px;  padding:0px;  left:0px;" %>  
                <% end %>
              </div>
        </div>   
      </div>
      </div>
            <div class="modal-footer" >
              <%= f.submit "Create", class: "btn primary pull-right", id: "create_event_submit" %>  
            </div>
          </div> 
        </div>
  <% end %>





<script type="text/javascript">

$(document).ready(function(){
  $("li.event").click(function(){
    $(this).next('a').click();
    $('.loading_page').show();
  });
});

$(function(){
  $('.button_toggle').hide();

   $('.tr-hover').hover(function() {
       $(this).find('.button_toggle').show();
       }, function() {
         $(this).find('.button_toggle').hide();
    });

});


$('.event_inv').click(function(){
  $(this).closest('li').hide();
});

$(document).ready(function(){
  $.validate({
    onSuccess : function() {
      $('#create_event_submit').attr('data-loading-text', 'Creating...');
      $('#create_event_submit').button('loading');
    },
  });
  $('.loading_sub').hide();
});



$(document).ready(function(){

  $('#posts_community_li').removeClass('active');
  $('#about_community_li').removeClass('active');
  $('#photos_community_li').removeClass('active');
  $('#members_community_li').removeClass('active');
  $('#groups_community_li').removeClass('active');
  $('#events_community_li').addClass('active');


});

    $(function() {
      return $('.events_with_autocomplete').autocomplete({
        minLength: 2,
        source: function(request, response) {
          return $.ajax({
            url: $('.events_with_autocomplete').data('autocompleteurl'),
            dataType: "json",
            data: {starts_at: "", ends_at: "",
              address: request.term, event: "<%= @event.to_json %>"
            },
            success: function(data) {
              return response(data);
            }
          });
        }
      });
    });


$('#up_events_li').click(function(){
  $('#prev_events_li').removeClass('active');
  $('#up_events_li').addClass('active');
  $(this).next('a').click();
});

$('#prev_events_li').click(function(){
  $('#up_events_li').removeClass('active');
  $('#prev_events_li').addClass('active');
  $(this).next('a').click();
});

  $(document).ready(function(){
//  $('.gravatar').addClass('thumbnail');  
    $("#create_event").click(function(){
      $('#modal_create_event').modal({
      //keyboard: true,
      backdrop: "static",
    });
    });
    $("#closeX").click(function(){
          $('#modal_create_event').modal('hide');
        });

    $('#end_date').hide();
  });


var imageLoader = document.getElementById('pic');
imageLoader.addEventListener('change', handleImage, false);
$("#imageCanvas").click(function(){
  $("#pic").click();
});
var canvas = document.getElementById('imageCanvas');
var ctx = canvas.getContext('2d');
  ctx.font="15px Arial";
  ctx.fillText("Click here to add a picture",25,75);

function handleImage(e){
  var canvas = document.getElementById('imageCanvas');
  var ctx = canvas.getContext('2d');
  var iCnt=0;
  var files = e.target.files;
   if(files.length<1){
      $('#pic').val('');
      ctx.setTransform(1, 0, 0, 1, 0, 0);
      canvas.width = 300;
      canvas.height = 155;
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.font="15px Arial";
      ctx.fillText("Click here to add a picture",25,75);
      return;
    }
  canvas.width = 200;
  canvas.height = 155*(Math.ceil(files.length/4));
  for( var i = 0, len = files.length; i < len; i++) 
  {
    if(files[i])
    {
      var reader = new FileReader();
      reader.onload = function(event){
        var img = new Image();

        img.onload = function(){
          var ratioPx = 195;
          var sWidth =ratioPx;
          var ratio = img.width/sWidth;
          var sHeight = img.height/ratio;   
          if(sHeight>ratioPx){
           sHeight =ratioPx;
           ratio = img.height/sHeight;
           sWidth = img.width/ratio;  
         }
         ctx.drawImage(img, 155*(iCnt%4),155*(Math.floor(iCnt/4)),sWidth,sHeight);
                  //ctx.drawImage(img,0,0,sWidth,sHeight);
                  iCnt++;
                }
                img.src = event.target.result;
              }
              reader.readAsDataURL(e.target.files[i]);     
            }
          }
        }

$('#event_address').keydown(function(){
    $('#view_map_link').hide();
    $('#view_map').hide();
});

$('#view_map_link').click(function(){
    var address = "/events/get_geo_coordinates?address="+$('#event_address').val();
    // $.get(address,"script");
     $.ajax({
      type: "GET",
      url: address,
      dataType: "script"
    }); 
});

$('a.ui-corner-all').on("click", function(){
  if($('#event_address').val()!=""){
    $('#view_map_link').show();
  }else{
    $('#view_map_link').hide();
  }
});

$('#end_date_add_link').click(function(){
  $('#end_date').show();
  $('#end_date_add_link').hide();
});
$('#end_date_remove_link').click(function(){
  $('#end_date').hide();
  $('#end_date_add_link').show();
});


$(document).ready(function() {

  for (var i = 1; i < 99999; i++){
     window.clearInterval(i);
  }
  restartInterval();

  $('#view_map_link').hide();

      var startDateTextBox = $("#event_starts_at");
      var endDateTextBox = $("#event_ends_at");

      startDateTextBox.datetimepicker({ 
        onClose: function(dateText, inst) {
          if (endDateTextBox.val() != '') {
            var testStartDate = startDateTextBox.datetimepicker('getDate');
            var testEndDate = endDateTextBox.datetimepicker('getDate');
            if (testStartDate > testEndDate)
              endDateTextBox.datetimepicker('setDate', testStartDate);
          }
          else {
            endDateTextBox.val(dateText);
          }
        },
        onSelect: function (selectedDateTime){
          endDateTextBox.datetimepicker('option', 'minDate', startDateTextBox.datetimepicker('getDate') );
        },
        dateFormat: "dd/mm/yy"
      });
      endDateTextBox.datetimepicker({ 
        onClose: function(dateText, inst) {
          if (startDateTextBox.val() != '') {
            var testStartDate = startDateTextBox.datetimepicker('getDate');
            var testEndDate = endDateTextBox.datetimepicker('getDate');
            if (testStartDate > testEndDate)
              startDateTextBox.datetimepicker('setDate', testEndDate);
          }
          else {
            startDateTextBox.val(dateText);
          }
        },
        onSelect: function (selectedDateTime){
          startDateTextBox.datetimepicker('option', 'maxDate', endDateTextBox.datetimepicker('getDate') );
        },
        dateFormat: "dd/mm/yy"
      });

    });
</script>


<script type="text/javascript">
                    
                        var currentPage = 1;
                        var intervalID = -1000;
                        var insideLoop_up ="false"; 
                        var insideLoop_prev ="false"; 

                        function checkScroll_up_evts() {
                          if (nearBottomOfPage() && insideLoop_up!="true") {
                              insideLoop_up="true";
                              currentPage++;
                              $('.loading_sub').show();
                          if($('.home_page_post').length == 0){
                            clearInterval(intervalID);
                            for (var i = 1; i < 99999; i++){
                             window.clearInterval(i);
                           }
                           insideLoop_up = "false";
                           return;
                         }
                         jQuery.ajax('/communities/<%= community.id %>/up_events_page?page=' + currentPage, {asynchronous:true, evalScripts:true, method:'get', success: function(data, textStatus, jqXHR) {
                          $('.home_page_post').append($(data));
                          $('.loading_sub').hide();
                          if(typeof jQuery(data) == 'undefined' ||jQuery(data).html() == null || $(data).find('.events_paginate').html()==null){
                            clearInterval(intervalID);
                            for (var i = 1; i < 99999; i++){
                             window.clearInterval(i);
                           }
                           restartInterval();
                         }
                         insideLoop_up ="false"; 
                       },});
                       }
                      }

                      function checkScroll_prev_evts() {
                          if (nearBottomOfPage() && insideLoop_prev!="true") {
                              insideLoop_prev="true";
                              currentPage++;
                              $('.loading_sub').show();
                          if($('.home_page_post').length == 0){
                            clearInterval(intervalID);
                            for (var i = 1; i < 99999; i++){
                             window.clearInterval(i);
                           }
                           insideLoop_prev = "false";
                           return;
                         }
                         jQuery.ajax('/communities/<%= community.id %>/prev_events_page?page=' + currentPage, {asynchronous:true, evalScripts:true, method:'get', success: function(data, textStatus, jqXHR) {
                          $('.home_page_post').append($(data));
                          $('.loading_sub').hide();
                          if(typeof jQuery(data) == 'undefined' ||jQuery(data).html() == null || $(data).find('.events_paginate').html()==null){
                            clearInterval(intervalID);
                            for (var i = 1; i < 99999; i++){
                             window.clearInterval(i);
                           }
                           restartInterval();
                         }
                         insideLoop_prev ="false"; 
                       },});
                       }
                      }

                      function nearBottomOfPage() {
                        return scrollDistanceFromBottom() < 150;
                      }

                      function scrollDistanceFromBottom(argument) {
                        return pageHeight() - (window.pageYOffset + self.innerHeight);
                      }

                      function pageHeight() {
                        return Math.max(document.body.scrollHeight, document.body.offsetHeight);
                      }

                      $('document').ready(function(){
                        intervalID = setInterval(checkScroll_up_evts, 500);
                      });

                      $("#up_events_li").click(function(){
                         currentPage = 1;
                         intervalID = -1000;
                         insideLoop_up ="false"; 
                        var j=0;

                          for (var i = 1; i < 99999; i++){
                             window.clearInterval(i);
                             j=i;
                          }

                             if(j == 99998){
                                intervalID = setInterval(checkScroll_up_evts, 500);
                             }

                      });

                      $("#prev_events_li").click(function(){
                         currentPage = 1;
                         intervalID = -1000;
                         insideLoop_prev ="false"; 
                        var k=0;

                          for (var i = 1; i < 99999; i++){
                             window.clearInterval(i);
                             k=i;
                          }

                        if(k == 99998){
                            intervalID = setInterval(checkScroll_prev_evts, 500);
                          }
                      });



                  </script>

<% end %>